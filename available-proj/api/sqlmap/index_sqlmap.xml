<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="available">
    <select id="available.getOrders">
        SELECT
            A.order_idx,
            A.title,
            date_format(A.b_time, '%Y-%m-%d %H:%i') AS 'b_time',
            date_format(A.e_time, '%Y-%m-%d %H:%i') AS 'e_time',
            A.send_yn,
            A.output,
            A.status,
            A.import,
            date_format(A.reg_date, '%Y-%m-%d') AS 'reg_date',
            B.order_price,
            B.show_price
        FROM tb_order A
        inner join tb_price B on A.order_idx = B.order_idx
        WHERE 
            A.delete_yn = 'N'
            <if test="order_idx != null and order_idx != ''">
                AND A.order_idx = #{order_idx}
            </if>
        ORDER BY 
        <if test="sortData == 'order'">
            (
                CASE
                    WHEN A.status = '03' THEN 0
                    WHEN A.status = '05' THEN 0
                    WHEN A.status = '04' THEN 2
                    ELSE 1
                END
            ),
        </if>
        <if test="sortData == 'work'">
            (
                CASE
                    WHEN A.status = '01' THEN 0
                    WHEN A.status = '02' THEN 0
                    WHEN A.status = '06' THEN 0
                    WHEN A.status = '04' THEN 2
                    ELSE 1
                END
            ),
        </if>
        order_idx DESC
    </select>

    <select id="available.getOrderOne">
        SELECT
            A.order_idx,
            A.title,
            date_format(A.b_time, '%Y-%m-%d %H:%i') AS 'b_time',
            date_format(A.e_time, '%Y-%m-%d %H:%i') AS 'e_time',
            A.send_yn,
            A.output,
            A.status,
            A.import,
            A.content,
            date_format(A.reg_date, '%Y-%m-%d') AS 'reg_date',
            A.note,
            B.order_price,
            B.show_price
        FROM tb_order A
        inner join tb_price B on A.order_idx = B.order_idx
        WHERE 
            A.delete_yn = 'N' AND A.order_idx = #{order_idx}
    </select>

    <select id="available.getOutputs">
        select
            output_idx,
            name,
            price
        from tb_output
        order by name
    </select>

    <insert id="available.insertOrder">
        INSERT INTO tb_order(
            title,
            <if test="b_time != null and b_time != ''">
                b_time, 
            </if>
            <if test="e_time != null and e_time != ''">
                e_time, 
            </if>
            content, link, send_yn, `output`
            , note, status, import
            , delete_yn, reg_date, upd_date
            )
        VALUES(
            #{title},
            <if test="b_time != null and b_time != ''">
                #{b_time}, 
            </if>
            <if test="e_time != null and e_time != ''">
                #{e_time}, 
            </if>
             #{content}, NULL, 'N',#{output}, #{note}
            '01', 'N', #{import}, 'N', current_timestamp(), current_timestamp());
    </insert>

    <insert id="available.insertPrice">
        INSERT INTO available.tb_price(
            order_idx
            , order_price
            , show_price)
        VALUES(#{order_idx}, #{price}, #{price});
    </insert>

    <update id="available.updateOrder">
            UPDATE available.tb_order
            SET
                upd_date=current_timestamp()
                <if test="title != null and title != ''">
                    , title = #{title}
                </if>
                <if test="b_time_set == true and b_time != ''">
                    <if test="b_time == null">
                        , b_time = ${b_time}
                    </if>
                    <if test="b_time != null">
                        , b_time = #{b_time}
                    </if>
                </if>
                <if test="e_time_set == true and e_time != ''">
                    <if test="b_time == null">
                        , e_time = ${e_time}
                    </if>
                    <if test="b_time != null">
                        , e_time = #{e_time}
                    </if>
                </if>
                <if test="content != null and content != ''">
                    , content = #{content}
                </if>
                <if test="output != null and output != ''">
                    , output = #{output}
                </if>
                <if test="note != null and note != ''">
                    , note = #{note}
                </if>
                <if test="status != null and status != ''">
                    , status = #{status}
                </if>
                <if test="import != null and import != ''">
                    , import = #{import}
                </if>
                <if test="delete_yn != null and delete_yn != ''">
                    , delete_yn = #{delete_yn}
                </if>
            WHERE order_idx = #{order_idx};
    </update>

    <select id="available.selectOrderFix">
        select
            order_fix_idx
            , order_idx
            , content
        from tb_order_fix
        where order_idx = #{order_idx}
        order by reg_date
    </select>

    <select id="available.insertOrderFix">
        INSERT INTO available.tb_order_fix(
            order_idx
            , content
            , reg_date
            , upd_date
        )
        VALUES(#{order_idx}, #{content}, current_timestamp(), current_timestamp());
    </select>

    <update id="available.updatePrice">
        UPDATE tb_price
        SET 
            order_idx=#{order_idx}
            <if test="order_price != null and order_price != ''">
                , order_price=#{order_price}
            </if>
            <if test="show_price != null and show_price != ''">
                , show_price=#{show_price}
            </if>
        WHERE order_idx=#{order_idx};
    </update>
</mapper>