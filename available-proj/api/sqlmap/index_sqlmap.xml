<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="available">
    <select id="available.selectOutput">
        select output_idx, name, price
        from tb_output
    </select>
    
    <insert id="available.insertContent">
        INSERT INTO TB_CONTENT(
            CONTENT, REG_DATE
        )VALUES(
            #{content} , current_timestamp()
        )
    </insert>

    <insert id="available.insertOrder">
        INSERT INTO TB_ORDER(
            TITLE
            , B_TIME
            , E_TIME
            , OUTPUT
            , CONTENT_IDX
            , NOTE
            , IMP_YN
            , DELETE_YN
        )
        VALUES(
            #{title}
            , #{b_time}
            , #{e_time}
            , #{output}
            , #{content_idx}
            , #{note}
            , #{imp_yn}
            , #{delete_yn}
        );
    </insert>

    <insert id="available.insertOrderHis">
        INSERT INTO TB_ORDER_HIS(
            ORDER_IDX
            , TITLE
            , B_TIME
            , E_TIME
            , OUTPUT
            , CONTENT_IDX
            , NOTE
            , IMP_YN
            , DELETE_YN
            , REG_DATE
        )
        VALUES(
            #{order_idx}
            , NULL
            , #{b_time}
            , #{e_time}
            , #{output}
            , #{content_idx}
            , #{note}
            , #{imp_yn}
            , #{delete_yn}
            , CURRENT_TIMESTAMP()
        );
    </insert>

    <insert id="available.insertPrice">
        INSERT INTO TB_PRICE (
            ORDER_IDX,
            ORDER_PRICE,
            WORK_PRICE,
            SHOW_YN
        )
        VALUES(
            #{order_idx},
            #{order_price},
            #{work_price},
            #{show_yn}
        )
    </insert>

    <insert id="available.insertPriceHis">
        INSERT INTO TB_PRICE_HIS (
            ORDER_IDX,
            ORDER_PRICE,
            WORK_PRICE,
            SHOW_YN,
            REG_DATE
            
        )
        VALUES(
            #{order_idx},
            #{order_price},
            #{work_price},
            #{show_yn},
            CURRENT_TIMESTAMP()
        )
    </insert>

    <insert id="available.insertOrderStatus">
        INSERT INTO TB_ORDER_STATUS (
            ORDER_IDX,
            STATUS
        )
        VALUES(
            #{order_idx},
            #{status}
        )
    </insert>

    <select id="available.selectOrderList">
        SELECT 
            A.order_idx,
            A.order_seq,
            A.title,
            DATE_FORMAT(A.b_time, '%Y-%m-%d %H:%i') AS 'b_time',
            DATE_FORMAT(A.e_time, '%Y-%m-%d %H:%i') AS 'e_time',
            A.output,
            D.status,
            A.imp_yn,
            C.order_price,
            C.work_price,
            C.show_yn,
            A.note,
            D.order_show_yn
        FROM TB_ORDER A
        INNER JOIN TB_PRICE C ON A.ORDER_IDX = C.ORDER_IDX 
        INNER JOIN TB_ORDER_STATUS D ON A.ORDER_IDX = D.ORDER_IDX
        INNER JOIN TB_CONTENT E ON A.CONTENT_IDX  = E.CONTENT_IDX
        where 
            A.delete_yn = 'N'
        ORDER BY 
        <if test="sender == 'order' or sender == 'broker'">
            (
                CASE
                    WHEN A.IMP_YN = 'Y' AND D.status = '03' then 0
                    WHEN A.IMP_YN = 'Y' AND D.status = '05' then 0
                    WHEN A.IMP_YN = 'Y' AND D.status != '04' then 1
                    WHEN D.status = '03' THEN 2
                    WHEN D.status = '05' THEN 2
                    WHEN D.status = '04' THEN 99
                    ELSE 3
                END
            ),
        </if>
        <if test="sender == 'work'">
            (
                CASE
                    WHEN A.IMP_YN = 'Y' AND D.status = '01' then 0
                    WHEN A.IMP_YN = 'Y' AND D.status = '02' then 0
                    WHEN A.IMP_YN = 'Y' AND D.status = '06' then 0
                    WHEN A.IMP_YN = 'Y' AND D.status != '04' then 1
                    WHEN D.status = '01' THEN 2
                    WHEN D.status = '02' THEN 2
                    WHEN D.status = '06' THEN 2
                    WHEN D.status = '04' THEN 99
                    ELSE 3
                END
            ),
        </if>
        A.order_idx DESC
    </select>

    <update id="available.updateOrderStatus">
        UPDATE TB_ORDER_STATUS
        SET ORDER_IDX = #{order_idx}
        <if test="status != null and status != ''">
            , STATUS = #{status}
        </if>
        <if test="order_show_yn != null and order_show_yn != ''">
            , ORDER_SHOW_YN = #{order_show_yn}
        </if>
        WHERE ORDER_IDX = #{order_idx}
    </update>

    <update id="available.updatePrice">
        UPDATE tb_price
        SET 
            ORDER_IDX=#{order_idx}
            <if test="order_price != null and order_price != ''">
            , ORDER_PRICE=#{order_price}
            </if>
            <if test="work_price != null and work_price != ''">
            , WORK_PRICE=#{work_price}
            </if>
            <if test="show_yn != null and show_yn != ''">
            , SHOW_YN=#{show_yn}
            </if>
        WHERE ORDER_IDX=#{order_idx}
    </update>

    <select id="available.selectOrderView">
        SELECT 
            TO2.order_idx, TO2.title , DATE_FORMAT(TO2.b_time, '%Y-%m-%d %H:%i') AS 'b_time' 
            , DATE_FORMAT(TO2.e_time, '%Y-%m-%d %H:%i') AS 'e_time' , TO2.`output` , TO2.note 
            , TO2.imp_yn , TC.content , TP.order_price 
            , TP.work_price , TP.show_yn , TOS.status 
        FROM TB_ORDER TO2 
        INNER JOIN TB_CONTENT TC ON TO2.CONTENT_IDX = TC.CONTENT_IDX
        INNER JOIN TB_PRICE TP ON TO2.ORDER_IDX = TP.ORDER_IDX 
        INNER JOIN TB_ORDER_STATUS TOS ON TO2.ORDER_IDX = TOS.ORDER_IDX 
        WHERE TO2.order_idx  = #{order_idx} AND TO2.delete_yn = 'N'
    </select>

    <select id="available.selectOrderFix">
        SELECT TOF.order_fix_idx, TOF.order_idx, TC.content 
        FROM TB_ORDER_FIX TOF
        INNER JOIN TB_CONTENT TC ON TOF.CONTENT_IDX  = TC.CONTENT_IDX
        WHERE TOF.ORDER_IDX = #{order_idx} AND TOF.DELETE_YN = 'N'
        ORDER BY TOF.ORDER_FIX_IDX DESC
    </select>

    <insert id="available.insertOrderFix">
        INSERT INTO TB_ORDER_FIX
        (ORDER_IDX, CONTENT_IDX)
        VALUES(#{order_idx}, #{content_idx});
    </insert>

    <insert id="available.insertOrderFixHis">
        INSERT INTO TB_ORDER_FIX_HIS
        (ORDER_FIX_IDX, ORDER_IDX, CONTENT_IDX, REG_DATE)
        VALUES(#{order_fix_idx}, #{order_idx}, #{content_idx}, current_timestamp());
    </insert>
    
    <update id="available.updateOrder">
        UPDATE TB_ORDER
        SET TITLE=#{title}, B_TIME=#{b_time}, E_TIME=#{e_time}
            , `OUTPUT`=#{output}, CONTENT_IDX=#{content_idx}, NOTE=#{note}
            , IMP_YN=#{imp_yn}, DELETE_YN=#{delete_yn}
        WHERE ORDER_IDX=#{order_idx};
    </update>

    <update id="available.deletOrder" >
        UPDATE TB_ORDER
        SET DELETE_YN = 'Y'
        WHERE ORDER_IDX = #{order_idx}
    </update>

    <insert id="available.deleteOrderHis">
        INSERT INTO TB_ORDER_HIS(
            ORDER_IDX
            , TITLE
            , B_TIME
            , E_TIME
            , OUTPUT
            , CONTENT_IDX
            , NOTE
            , IMP_YN
            , DELETE_YN
            , REG_DATE
        )
        SELECT ORDER_IDX, TITLE, B_TIME, E_TIME, OUTPUT, CONTENT_IDX, NOTE, IMP_YN, 'Y', CURRENT_TIMESTAMP()
        FROM TB_ORDER
        WHERE ORDER_IDX = #{order_idx}
    </insert>

    <update id="available.deleteOrderFix" >
        UPDATE TB_ORDER_FIX
        SET DELETE_YN = 'Y'
        WHERE ORDER_FIX_IDX = #{order_fix_idx}
    </update>

    <insert id="available.deleteOrderFixHis">
        INSERT INTO TB_ORDER_FIX_HIS
        (ORDER_FIX_IDX, ORDER_IDX, CONTENT_IDX, DELETE_YN, REG_DATE)
        SELECT ORDER_FIX_IDX, ORDER_IDX, CONTENT_IDX, 'Y', CURRENT_TIMESTAMP()
        FROM TB_ORDER_FIX
        WHERE ORDER_FIX_IDX = #{order_fix_idx}
    </insert>

    <select id="available.selectOrderContent">
        SELECT TO2.ORDER_IDX , TC.CONTENT_IDX , TC.CONTENT 
        FROM TB_ORDER TO2 
        INNER JOIN TB_CONTENT TC ON TO2.CONTENT_IDX = TC.CONTENT_IDX 
        WHERE TO2.DELETE_YN = 'N'
        <if test="order_idx != null and order_idx != ''">
            AND TO2.ORDER_IDX = #{order_idx}
        </if>
    </select>

    <update id="available.updaetSchedule">
        UPDATE TB_ORDER
        SET ORDER_IDX = #{order_idx}
        <if test="b_time != null and b_time != ''">
            , B_TIME = #{b_time}
        </if>
        <if test="e_time != null and e_time != ''">
            , E_TIME = #{e_time}
        </if>
        WHERE
            ORDER_IDX = #{order_idx}
    </update>

    <select id="available.selectGetPrice">
        SELECT TO2.ORDER_IDX , TO2.TITLE , TO2.`OUTPUT` , TP.ORDER_PRICE , TP.WORK_PRICE
        FROM TB_ORDER TO2
        INNER JOIN TB_PRICE TP ON TO2.ORDER_IDX  = TP.ORDER_IDX 
        WHERE TO2.ORDER_IDX IN (
            <foreach collection="checks" item="check", separator=",">
                #{check}
            </foreach>
        )
    </select>

    <update id="available.updatePricesShowYN">
        UPDATE TB_PRICE
        SET SHOW_YN=#{show_yn}
        WHERE ORDER_IDX IN (
            <foreach collection="orderIdxs" item="order_idx", separator=",">
                #{order_idx}
            </foreach>
        )
    </update>

    <insert id="available.insertPricesShowYNHis">
        INSERT INTO TB_PRICE_HIS(
            ORDER_IDX,
            ORDER_PRICE,
            WORK_PRICE,
            SHOW_YN,
            REG_DATE
        )
        SELECT ORDER_IDX, ORDER_PRICE, WORK_PRICE, #{show_yn}, CURRENT_TIMESTAMP()
        FROM TB_PRICE
        WHERE ORDER_IDX IN (
            <foreach collection="orderIdxs" item="order_idx", separator=",">
                #{order_idx}
            </foreach>
        )
    </insert>

    <insert id="available.insertFile">
        INSERT INTO tb_file (
            FILE_SAVE_NAME
            , FILE_EXT
            , FILE_PATH
            , FILE_SIZE
        ) VALUES(
            #{file_save_name}
            , #{file_ext}
            , #{file_path}
            , #{file_size}
        );
    </insert>

    <update id="available.updateOrderSeq">
        UPDATE tb_order 
        SET order_seq = order_idx + 53
        where order_idx = #{order_idx}
    </update>
</mapper>
