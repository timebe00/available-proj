<!DOCTYPE html>
<html lang="ko">

<head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>작업 항목 확인</title>

    <link href="https://cdn.quilljs.com/1.3.6/quill.snow.css" rel="stylesheet" />
    <script src="https://cdn.quilljs.com/1.3.6/quill.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/quill-image-resize-module@3.0.0/image-resize.min.js"></script>

    <script src="/common/vander/jquery.js"></script>
    <script src="/common/vander/axios.js"></script>
    <script src="/common/js/senderAxios.js"></script>

    <style>
        body {
            font-family: Arial, sans-serif;
            margin: 40px;
        }

        h1 {
            font-size: 24px;
            margin-bottom: 20px;
        }

        table {
            width: 100%;
            border-collapse: collapse;
            margin-bottom: 20px;
        }

        th,
        td {
            padding: 10px;
            border: 1px solid #ccc;
            text-align: center;
        }

        th {
            background-color: #f5f5f5;
        }

        td select {
            padding: 4px;
            font-weight: bold;
        }

        select.status {
            width: 130px;
        }

        .task-name {
            width: 50%;
        }

        .deliverable {
            width: 10%;
            white-space: nowrap;
            overflow: hidden;
            text-overflow: ellipsis;
        }

        .important {
            border: 2px solid red;
            background-color: #ffe6e6;
        }

        a {
            color: #007bff;
            text-decoration: none;
        }

        a:hover {
            text-decoration: underline;
        }

        .modal {
            display: none;
            position: fixed;
            z-index: 2000;
            left: 0;
            top: 0;
            width: 100%;
            height: 100%;
            background-color: rgba(0, 0, 0, 0.5);
            overflow: auto;
        }

        .modal-content {
            position: relative;
            margin: 50px auto;
            background: #fff;
            padding: 30px;
            border-radius: 8px;
            max-width: 900px;
            width: 90%;
            box-shadow: 0 4px 12px rgba(0, 0, 0, 0.2);
        }

        .modal-close {
            position: absolute;
            top: 12px;
            right: 20px;
            font-size: 24px;
            cursor: pointer;
        }

        .hover_line:hover {
            background-color: #f3f7fe;
        }

        .top-actions {
            display: flex;
            justify-content: flex-end;
            margin-bottom: 20px;
        }

        .btn {
            padding: 6px 12px;
            background-color: #28a745;
            border: none;
            color: white;
            border-radius: 4px;
            cursor: pointer;
            font-size: 14px;
        }

        .btn-blue {
            background-color: #007bff;
        }

        .btn:hover {
            opacity: 0.9;
        }

        .row {
            display: flex;
            justify-content: space-between;
            align-items: center;
            margin-bottom: 15px;
        }

        .row label {
            font-weight: bold;
            width: 160px;
        }

        .row .value {
            flex: 1;
        }

        .multiline {
            white-space: pre-wrap;
        }

        .section-title {
            font-size: 18px;
            font-weight: bold;
            margin-top: 30px;
            margin-bottom: 10px;
            border-bottom: 1px solid #ccc;
            padding-bottom: 5px;
            display: flex;
            justify-content: space-between;
            align-items: center;
        }

        .revision-phase {
            margin-bottom: 30px;
        }

        .revision-title {
            font-weight: bold;
            margin-bottom: 6px;
        }

        .editor-container {
            display: none;
            margin-top: 10px;
        }

        #editor {
            height: 200px;
            border: 1px solid #ccc;
            border-radius: 4px;
            background-color: white;
        }

        .quill-container {
            margin-bottom: 10px;
        }

        /* 이미지 보기 모달 */
        #imageModal {
            display: none;
            position: fixed;
            z-index: 3000;
            left: 0;
            top: 0;
            width: 100%;
            height: 100%;
            background-color: rgba(0, 0, 0, 0.9);
        }

        #modalImage {
            display: block;
            margin: 80px auto;
            max-width: 90%;
            max-height: 80%;
        }

        #modalClose {
            position: absolute;
            top: 30px;
            right: 50px;
            color: #fff;
            font-size: 36px;
            font-weight: bold;
            cursor: pointer;
        }

        #modalClose:hover {
            color: #bbb;
        }

        .revision-content {
            word-break: break-all;
        }

        .text_center {
            text-align: center;
        }
    </style>
</head>

<body>
    <h1>작업 항목 확인</h1>

    <table>
        <thead>
            <tr>
                <th>Best</th>
                <th>At Least</th>
                <th class="task-name">작업명</th>
                <th class="deliverable">산출물</th>
                <th>완료 여부</th>
                <th>단가</th>
            </tr>
        </thead>
        <tbody id="taskTableBody"></tbody>
    </table>

    <!-- 작업 보기 모달 -->
    <div id="viewModal" class="modal">
        <div class="modal-content">
            <span class="modal-close" onclick="document.getElementById('viewModal').style.display='none'">&times;</span>
            <div id="viewModalBody">
                <!-- view.ejs 내용 통합 -->
                <div class="container">
                    <h1 class="text_center">작업 내용 확인</h1>
                    <div class="top-actions">
                        <a href="javascript:sendModify()" class="btn btn-blue">수정하기</a>
                    </div>
                    <div class="row">
                        <label>현재 상태</label>
                        <div class="value">
                            <span id="order_status" style=" padding:10px 20px;">작업완료</span>
                        </div>
                    </div>
                    <div class="row"><label>작업명</label>
                        <div class="value" id="order_title" style="word-break: break-all;">메인페이지 UI 구성</div>
                    </div>
                    <div class="row"><label>Best</label>
                        <div class="value" id="b_time">2025-07-10 18:00</div>
                    </div>
                    <div class="row"><label>At Least</label>
                        <div class="value" id="e_time">2025-07-08 12:00</div>
                    </div>
                    <div class="row"><label>산출물</label>
                        <div class="value" id="output">main_ui_v2.png (PNG)</div>
                    </div>
                    <div class="row"><label>단가</label>
                        <div class="value" id="price">250,000원</div>
                    </div>
                    <div class="row"><label>비고</label>
                        <div class="value" id="note" style="word-break: break-all;">-</div>
                    </div>
                    <div class="section-title">
                        <span>작업 내용</span>
                    </div>
                    <div class="multiline" id="order_content">
                        - 메인 UI 레이아웃 구성 완료<br />- 반응형 스타일 적용<br />- 버튼 인터랙션 구현
                    </div>
                    <div class="section-title">
                        <span>수정 사항</span>
                    </div>
                    <div id="revisionsContainer">
                        <div class="revision-phase">
                            <div class="revision-title">수정 사항 1차</div>
                            <div class="revision-content">
                                <ul>
                                    <li>버튼 색상 변경 요청</li>
                                    <li>폰트 사이즈 확대</li>
                                </ul>
                            </div>
                        </div>
                        <div class="revision-phase">
                            <div class="revision-title">수정 사항 2차</div>
                            <div class="revision-content">
                                <ul>
                                    <li>버튼 색상 변경 요청</li>
                                    <li>폰트 사이즈 확대</li>
                                </ul>
                            </div>
                        </div>
                        <div class="revision-phase">
                            <div class="revision-title">수정 사항 3차</div>
                            <div class="revision-content">
                                <ul>
                                    <li>버튼 색상 변경 요청</li>
                                    <li>폰트 사이즈 확대</li>
                                </ul>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <!-- 이미지 보기 모달 -->
    <div id="imageModal">
        <span id="modalClose">&times;</span>
        <img id="modalImage" />
    </div>
</body>

</html>

<script>
    var contentData = {};
    var priceObj = {};
    var selectOrder = 0;

    const quill = new Quill('#editor', {
        theme: 'snow',
        placeholder: '수정 내용을 입력하세요...',
        modules: {
            toolbar: [
                [{ header: [1, 2, false] }],
                ['bold', 'italic', 'underline'],
                ['link', 'image'],
                [{ list: 'ordered' }, { list: 'bullet' }],
                ['clean']
            ],
            imageResize: {
                modules: ['Resize', 'DisplaySize']
            }
        }
    });

    document.addEventListener('click', function (e) {
        if (e.target.tagName === 'IMG' && (e.target.closest('.multiline') || e.target.closest('.revision-content'))) {
            const modal = document.getElementById('imageModal');
            const modalImg = document.getElementById('modalImage');
            modal.style.display = 'block';
            modalImg.src = e.target.src;
        }
        if (e.target.id === 'imageModal') {
            document.getElementById('imageModal').style.display = 'none';
        }
    });

    document.getElementById('modalClose').onclick = () => {
        document.getElementById('imageModal').style.display = 'none';
    };

    // ✅ 테이블 새로고침 함수
    function reloadTableBody() {
        $("#taskTableBody").load("/e6e7b89523ac41e0ba406fbd05ed9de6/work/listTable");
    }

    // ✅ 최초 실행 시
    $(document).ready(function () {
        reloadTableBody();

        // ✅ 30초마다 테이블 새로고침
        setInterval(reloadTableBody, 30000);
    });

    $(document).on("click", ".show_view_model", function () {
        let order_idx = $(this).data("order_idx");
        let order = contentData[order_idx];
        let status = "";
        let background_color = "#f3f7fe";
        let color = "#0f69f4";
        selectOrder = order_idx;

        if (order.status == "01") { status = "작업요청"; background_color = "#ee293b"; color = "#ffffff"; }
        else if (order.status == "02") { status = "수정요청"; background_color = "#ee293b"; color = "#ffffff"; }
        else if (order.status == "03") { status = "작업완료"; }
        else if (order.status == "04") { status = "납품완료"; }
        else if (order.status == "05") { status = "수정완료"; }
        else if (order.status == "06") { status = "완료후 수정 요청"; background_color = "#ee293b"; color = "#ffffff"; }



        $("#order_status").text(status);
        $("#order_status").css("background-color", background_color);
        $("#order_status").css("color", color);
        $("#order_title").text(order.title);
        $("#b_time").text(order.b_time);
        $("#e_time").text(order.e_time);
        $("#output").text(order.output);
        $("#price").text(order.work_price);
        $("#note").text(order.note || "-");
        $("#order_content").html(order.content);


        $("#viewModal").show();

        senderAxios.callAxios("/e6e7b89523ac41e0ba406fbd05ed9de6/work/getOrderFixs", "post", { order_idx: order_idx })
            .then((data) => {
                $("#revisionsContainer").empty();

                for (let orderFixIdx in data.data.data.orderFixs) {
                    let orderFix = data.data.data.orderFixs[orderFixIdx];

                    let txt = '<div class="revision-phase">';
                    txt += '<div class="revision-title">수정 사항 ' + (data.data.data.orderFixs.length - Number(orderFixIdx)) + '차</div>';
                    txt += '<div class="revision-content">';
                    txt += orderFix.content.replace(/\\"/g, '"');
                    txt += '</div>';
                    txt += '</div>';

                    $("#revisionsContainer").append(txt);
                }
            })
    })

    $(document).on("click", "#viewModal", function (e) {
        const $viewModalBody = $('#viewModalBody');
        if ($viewModalBody.is(':visible') && e.target.id === 'viewModal') {
            $('#viewModal').hide();
        }
    })

    $(document).on("change", ".status", function () {
        let status = $(this).val();
        let order_idx = $(this).parent().parent().data("order_idx")
        if (status == "01" || status == "02" || status == "06") {
            $(this).css("background-color", "#ee293b");
            $(this).css("color", "#ffffff");
        }
        else {
            $(this).css("background-color", "");
            $(this).css("color", "");
        }

        let params = {
            status: status,
            order_idx: order_idx
        }

        senderAxios.callAxios("/e6e7b89523ac41e0ba406fbd05ed9de6/work/changeStatus", "post", params)
            .then((data) => {
                contentData[order_idx].status = status;
            })
            ;
    })
</script>